// <auto-generated />
using System;
using Google.Cloud.EntityFrameworkCore.Spanner.IntegrationTests;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Google.Cloud.EntityFrameworkCore.Spanner.IntegrationTests.MigrationTests.Migrations
{
    [DbContext(typeof(TestMigrationDbContext))]
    [Migration("20201231072915_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("Google.Cloud.EntityFrameworkCore.Spanner.IntegrationTests.Brand", b =>
                {
                    b.Property<long>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT64");

                    b.Property<string>("BrandDescription")
                        .HasColumnType("STRING");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Google.Cloud.EntityFrameworkCore.Spanner.IntegrationTests.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT64");

                    b.Property<float>("Freight")
                        .HasColumnType("FLOAT64");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("ShipAddress")
                        .HasColumnType("STRING");

                    b.Property<string>("ShipCity")
                        .HasColumnType("STRING");

                    b.Property<string>("ShipCountry")
                        .HasColumnType("STRING");

                    b.Property<string>("ShipName")
                        .HasColumnType("STRING");

                    b.Property<string>("ShipPostalCode")
                        .HasColumnType("STRING");

                    b.Property<string>("ShipRegion")
                        .HasColumnType("STRING");

                    b.Property<string>("ShipVia")
                        .HasColumnType("STRING");

                    b.Property<DateTime>("ShippedDate")
                        .HasColumnType("TIMESTAMP");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Google.Cloud.EntityFrameworkCore.Spanner.IntegrationTests.OrderDetail", b =>
                {
                    b.Property<long>("OrderId")
                        .HasColumnType("INT64");

                    b.Property<long>("ProductId")
                        .HasColumnType("INT64");

                    b.Property<float>("Discount")
                        .HasColumnType("FLOAT64");

                    b.Property<int>("Quantity")
                        .HasColumnType("INT64");

                    b.Property<float>("UnitPrice")
                        .HasColumnType("FLOAT64");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Google.Cloud.EntityFrameworkCore.Spanner.IntegrationTests.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT64");

                    b.Property<long>("BrandId")
                        .HasColumnType("INT64");

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Google.Cloud.EntityFrameworkCore.Spanner.IntegrationTests.OrderDetail", b =>
                {
                    b.HasOne("Google.Cloud.EntityFrameworkCore.Spanner.IntegrationTests.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Google.Cloud.EntityFrameworkCore.Spanner.IntegrationTests.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Google.Cloud.EntityFrameworkCore.Spanner.IntegrationTests.Product", b =>
                {
                    b.HasOne("Google.Cloud.EntityFrameworkCore.Spanner.IntegrationTests.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
